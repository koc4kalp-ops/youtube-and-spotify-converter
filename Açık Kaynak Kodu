import os
import time
import re
import yt_dlp
import ctypes
from ctypes import wintypes
import socket
import shutil
# ---------- Otomatik KÃ¼tÃ¼phane KontrolÃ¼ ----------
import importlib
import subprocess
import sys

GEREKLI_PAKETLER = ["yt_dlp", "spotdl"]

def paket_kontrol():
    import importlib.util
    import threading
    import itertools

    GEREKLI_PAKETLER = ["yt_dlp", "spotdl"]
    eksik = [p for p in GEREKLI_PAKETLER if importlib.util.find_spec(p) is None]

    if not eksik:
        return  # Her ÅŸey yÃ¼klÃ¼, direkt Ã§Ä±k

    print(f"{TURUNCU}[!] Gerekli kÃ¼tÃ¼phaneler indiriliyor...{SIFIRLA}")

    stop_anim = False

    def animasyon():
        for c in itertools.cycle(['|', '/', '-', '\\']):
            if stop_anim:
                break
            sys.stdout.write(f'\r{YESIL}Ä°ndiriliyor... {c}{SIFIRLA}')
            sys.stdout.flush()
            time.sleep(0.1)

    # animasyonu baÅŸlat
    t = threading.Thread(target=animasyon)
    t.start()

    for p in eksik:
        try:
            subprocess.check_call(
                [sys.executable, "-m", "pip", "install", p],
                stdout=subprocess.DEVNULL,
                stderr=subprocess.DEVNULL
            )
        except Exception as e:
            stop_anim = True
            print(f"\n{KIRMIZI}[-] {p} yÃ¼klenemedi: {e}{SIFIRLA}")
            input("Devam etmek iÃ§in Enterâ€™a bas...")
            return

    stop_anim = True
    time.sleep(0.2)
    sys.stdout.write("\r" + " " * 40 + "\r")
    print(f"{YESIL}[+] Gerekli kÃ¼tÃ¼phaneler baÅŸarÄ±yla yÃ¼klendi!{SIFIRLA}")
    time.sleep(1)
    os.system("cls")


# ---------- Renkler ----------
YESIL = "\033[38;5;46m"
MOR = "\033[95m"
MAVI = "\033[94m"
CAMGOBEGI = "\033[36m"
KIRMIZI = "\033[91m"
SIFIRLA = "\033[0m"
TURUNCU = "\033[38;5;214m"
KALIN = "\033[1m"
ALTI_CIZILI = "\033[4m"
BEYAZ = "\033[97m"

# ---------- Desktop & KlasÃ¶r ----------
def get_desktop_path():
    if os.name=="nt":
        try:
            buf = ctypes.create_unicode_buffer(wintypes.MAX_PATH)
            CSIDL_DESKTOPDIRECTORY = 0x0010
            ctypes.windll.shell32.SHGetFolderPathW(None, CSIDL_DESKTOPDIRECTORY, None, 0, buf)
            return buf.value
        except:
            return os.path.join(os.environ.get("USERPROFILE", os.path.expanduser("~")), "Desktop")
    return os.path.join(os.path.expanduser("~"), "Desktop")

DOWNLOAD_DIR = os.path.join(get_desktop_path(), f"Indirilenler_{socket.gethostname()}")
os.makedirs(DOWNLOAD_DIR, exist_ok=True)

# ---------- YardÄ±mcÄ± Fonksiyonlar ----------
def temizle():
    os.system("cls" if os.name=="nt" else "clear")

def anim_print(metin: str, delay: float=0.04):
    for harf in metin:
        print(harf, end="", flush=True)
        time.sleep(delay)
    if not metin.endswith("\n"): print()

def baslik_anim(metin):
    anim = f"{ALTI_CIZILI}{KALIN}{CAMGOBEGI}{metin}{SIFIRLA}\n"
    for harf in anim: print(harf, end="", flush=True); time.sleep(0.01)

def human_bytes(n):
    if n is None: return "?"
    n=float(n)
    for unit in ['B','KB','MB','GB','TB']:
        if n < 1024.0: return f"{n:3.2f}{unit}"
        n/=1024.0
    return f"{n:.2f}PB"

# ---------- YouTube Progress ----------
def yt_progress_hook(d):
    status = d.get('status')
    if status=='downloading':
        downloaded = d.get('downloaded_bytes') or 0
        total = d.get('total_bytes') or d.get('total_bytes_estimate') or 0
        speed = d.get('speed') or 0
        percent = (downloaded/total*100) if total else 0
        mbps = speed / (1024*1024)
        eta = (total-downloaded)/speed if speed>0 else 0

        bar_length=40
        filled=int(bar_length*percent/100)
        bar=f"{TURUNCU}{'â–ˆ'*filled}{'â”€'*(bar_length-filled)}{SIFIRLA}"
        line=f"{bar} {TURUNCU}{percent:6.2f}%{SIFIRLA} {YESIL}{mbps:6.2f} MB/s{SIFIRLA} ETA: {eta:6.1f}s"
        sys.stdout.write('\r'+line)
        sys.stdout.flush()
    elif status=='finished':
        sys.stdout.write('\r'+' '*100+'\r')
        sys.stdout.flush()

        anim_print(f"\n{TURUNCU}{KALIN}{ALTI_CIZILI}Ä°ndirme tamamlandÄ±!{SIFIRLA}",0.01)
        anim_print(f"{TURUNCU}MenÃ¼ye dÃ¶nmek iÃ§in {KALIN}{ALTI_CIZILI}M{SIFIRLA}{TURUNCU}, Ã§Ä±kmak iÃ§in {TURUNCU}{KALIN}{ALTI_CIZILI}Enter'a{SIFIRLA}{TURUNCU} basÄ±n.{SIFIRLA}",0.01)
        secim2=input("> ").strip().lower()
        if secim2=="m":
            return
        else:
            exit()

def url_dogrula_youtube(url):
    if not url or ("youtube.com" not in url and "youtu.be" not in url):
        return False
    try:
        with yt_dlp.YoutubeDL({'quiet':True,'noplaylist':True}) as ydl:
            ydl.extract_info(url, download=False)
        return True
    except: return False

def youtube_indir():
    while True:
        os.system("cls")
        anim_print(f"\n{KALIN}{KIRMIZI}You{SIFIRLA}{KALIN}{BEYAZ}Tube{SIFIRLA} {TURUNCU}linki girin (MenÃ¼ye dÃ¶nmek iÃ§in M): {SIFIRLA}",0.01)#Github-Cerberus
        url=input("> ").strip()
        if url.lower()=="m": return
        if url_dogrula_youtube(url): break
        anim_print(f"{KIRMIZI}GeÃ§ersiz link!{SIFIRLA}",0.03)

    anim_print(f"{KALIN}{KIRMIZI}\n================================\n{SIFIRLA}{KALIN}{KIRMIZI}{ALTI_CIZILI}FormatÄ±nÄ± seÃ§in.{SIFIRLA}{KIRMIZI}\n================================\n{SIFIRLA}{TURUNCU}[1]{SIFIRLA} MP3 320kbps\n{TURUNCU}[2]{SIFIRLA} MP4 yÃ¼ksek Ã§Ã¶zÃ¼nÃ¼rlÃ¼k",0.002)
    secim=input(f"{YESIL}SeÃ§im (1/2): {SIFIRLA}").strip()
    if secim not in ["1","2"]:
        anim_print(f"{KIRMIZI}HatalÄ± seÃ§im!{SIFIRLA}",0.02)
        time.sleep(1)
        return

    if secim=="1":
        opts={'format':'bestaudio/best',
              'outtmpl':os.path.join(DOWNLOAD_DIR,'%(title)s.%(ext)s'),
              'postprocessors':[{'key':'FFmpegExtractAudio','preferredcodec':'mp3','preferredquality':'320'}],
              'quiet':True,'noplaylist':True,'progress_hooks':[yt_progress_hook]}
    else:
        opts={'format':'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best',
              'outtmpl':os.path.join(DOWNLOAD_DIR,'%(title)s.%(ext)s'),
              'merge_output_format':'mp4','quiet':True,'noplaylist':True,'progress_hooks':[yt_progress_hook]}

    try:
        with yt_dlp.YoutubeDL(opts) as ydl: ydl.download([url])
        print()
    except Exception as e: 
        anim_print(f"{KIRMIZI}Hata: {e}{SIFIRLA}",0.02)
        return

# ---------- Spotify Progress ----------
def parse_spotdl_progress(line):
    pct, mbps = None, None
    m_pct = re.search(r'(\d{1,3}(?:\.\d+)?)\s*%',line)
    if m_pct: pct=float(m_pct.group(1))
    m_speed = re.search(r'([\d,.]+)\s*(KiB/s|MiB/s|KB/s|MB/s|B/s)',line,re.IGNORECASE)
    if m_speed:
        val=float(m_speed.group(1).replace(',',''))
        unit=m_speed.group(2).lower()
        if 'kib' in unit or 'kb' in unit: mbps=val/1024
        elif 'mib' in unit or 'mb' in unit: mbps=val
        elif 'b/' in unit: mbps=val/(1024*1024)
    return pct, mbps

def spotify_indir():
    if not shutil.which("spotdl"):
        anim_print(f"{KIRMIZI}spotdl CLI bulunamadÄ±. YÃ¼kleniyor...{SIFIRLA}")
        subprocess.check_call([sys.executable, "-m", "pip", "install", "spotdl"])

    while True:
        os.system("cls")
        anim_print(f"{YESIL}{KALIN}Spot{BEYAZ}{KALIN}ify{SIFIRLA}{TURUNCU}{KALIN} linkini gir (MenÃ¼ye dÃ¶nmek iÃ§in M): {SIFIRLA}",0.01)
        url=input("> ").strip()
        if url.lower()=="m": return
        if "spotify.com" not in url:
            anim_print(f"{KIRMIZI}GeÃ§ersiz link!{SIFIRLA}",0.02)
            continue
        anim_print(f"{YESIL}Ä°ndiriliyor...{SIFIRLA}",0.01)

        try:
            proc=subprocess.Popen(["spotdl","download",url],cwd=DOWNLOAD_DIR,
                                  stdout=subprocess.PIPE,stderr=subprocess.STDOUT,text=True,bufsize=1)#Github-Cerberus
            for raw_line in proc.stdout:
                line=raw_line.rstrip("\n")
                pct, mbps=parse_spotdl_progress(line)
                bar_length=40
                filled=int((pct or 0)/100*bar_length)
                bar=f"{TURUNCU}{'â–ˆ'*filled}{'â”€'*(bar_length-filled)}{SIFIRLA}"
                eta = (100-(pct or 0))/(pct or 0)*5 if pct else 0
                sys.stdout.write(f'\r{bar} {TURUNCU}{pct or 0:6.2f}%{SIFIRLA} {YESIL}{mbps or 0:6.2f} MB/s{SIFIRLA} ETA: {eta:5.1f}s')
                sys.stdout.flush()
            proc.wait()
            print()
            if proc.returncode!=0:
                anim_print(f"{KIRMIZI}spotdl hata verdi.{SIFIRLA}",0.01)
                return
        except FileNotFoundError:
            anim_print(f"{KIRMIZI}spotdl bulunamadÄ±. pip install spotdl{SIFIRLA}",0.01)
            return
        break

# ---------- MenÃ¼ ----------
def menu():
    while True:
        temizle()
        baslik_anim("Hangi platformdan indireyim?\n")
        print(f"{KIRMIZI}[1]{SIFIRLA} YouTube\n{YESIL}[2]{SIFIRLA} Spotify\n{TURUNCU}[Q]{SIFIRLA} Ã‡Ä±k")
        secim=input(f"\n{MOR}{KALIN}SeÃ§im (1/2/Q): {SIFIRLA}").strip().lower()
        if secim=="q": 
            os.system("cls")
            anim_print(f"{CAMGOBEGI}{KALIN}GÃ¶rÃ¼ÅŸÃ¼rÃ¼z ðŸ‘‹{SIFIRLA}",0.04); break
        elif secim=="1": youtube_indir()
        elif secim=="2": spotify_indir()
        else: anim_print(f"{KIRMIZI}HatalÄ± seÃ§im!{SIFIRLA}",0.01); time.sleep(1)

if __name__=="__main__":
    try: menu()
    except KeyboardInterrupt: anim_print(f"\n{CAMGOBEGI}KapatÄ±ldÄ±.{SIFIRLA}",0.01)
